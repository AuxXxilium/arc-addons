#!/usr/bin/env sh
#
# Copyright (C) 2025 AuxXxilium <https://github.com/AuxXxilium>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

set -e

# Check if the script is run as root
if [ "$(id -u)" -ne 0 ]; then
  # Check if arcsu is available
  if ! -f /usr/bin/arcsu 2>/dev/null; then
    echo "Error: This script must be run as root or with 'arcsu'."
    exit 1
  fi
  exec env ARCSU_ACTIVE=1 arcsu "$0" "$@"
fi

reset_arcsu() {
  unset ARCSU_ACTIVE
}

MODES="config recovery junior automated update uefi"

usage() {
  echo "Use: $0 [ $(echo "$MODES" | sed 's/ /|/g') ]"
  reset_arcsu
  exit 1
}

[ -z "$1" ] || ! echo "$MODES" | grep -wq "$1" && usage

echo "Rebooting to $1 mode"

LOADER_DISK_PART1="$(/sbin/blkid -L ARC1 2>/dev/null)"
[ ! -b "$LOADER_DISK_PART1" ] && [ -b "/dev/synoboot1" ] && LOADER_DISK_PART1="/dev/synoboot1"
[ ! -b "$LOADER_DISK_PART1" ] && echo "Boot disk not found" && reset_arcsu && exit 1

if ! lsmod | grep -qw vfat; then
  modprobe -q vfat
fi
echo 1 >/proc/sys/kernel/syno_install_flag 2>/dev/null
WORK_PATH="/mnt/p1"
mkdir -p "$WORK_PATH"

cleanup() {
  umount "$LOADER_DISK_PART1" 2>/dev/null || return 1
  if mount | grep -q "$WORK_PATH"; then
    echo "Still mounted, not deleting $WORK_PATH"
    return 1
  fi
  rm -rf "$WORK_PATH" || return 1
  echo 0 >/proc/sys/kernel/syno_install_flag 2>/dev/null
}

mount | grep -q "$LOADER_DISK_PART1" && umount "$LOADER_DISK_PART1" 2>/dev/null || true
mount "$LOADER_DISK_PART1" "$WORK_PATH" || { echo "Can't mount $LOADER_DISK_PART1."; cleanup; reset_arcsu; exit 1; }

GRUBPATH="$(dirname "$(find "$WORK_PATH" -name grub.cfg | head -1)")"
[ -z "$GRUBPATH" ] && echo "Error: GRUB path not found" && cleanup && reset_arcsu && exit 1

ENVFILE="$GRUBPATH/grubenv"

if grub-editenv --help >/dev/null 2>&1; then
  [ ! -f "$ENVFILE" ] && grub-editenv "$ENVFILE" create
  grub-editenv "$ENVFILE" set next_entry="$1"
else
  if [ ! -f "$ENVFILE" ]; then
    {
      echo "# GRUB Environment Block"
      echo "# WARNING: Do not edit this file by tools other than grub-editenv!!!"
      echo "next_entry=$1"
    } >"$ENVFILE"
  else
    sed -i "/^#\{1,\}$/d" "$ENVFILE"
    if grep -q "^next_entry=" "$ENVFILE"; then
      sed -i "s/^next_entry=.*/next_entry=$1/" "$ENVFILE"
    else
      printf "next_entry=%s\n" "$1" >>"$ENVFILE"
    fi
  fi
  printf '%*s' $((1024 - $(wc -c <"$ENVFILE"))) "" | tr ' ' '#' >>"$ENVFILE"
fi

sync

if ! cleanup; then
  echo "Cleanup failed (could not unmount or remove work path). Not rebooting."
  reset_arcsu
  exit 1
fi

echo "Cleanup successful, rebooting now."
reset_arcsu
[ -x /usr/syno/sbin/synopoweroff ] && /usr/syno/sbin/synopoweroff -r || reboot